// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.1 (Build Build 350 03/24/2010)
// Created on Sun Dec 24 00:12:15 2023

test_block test_block_inst
(
	.SW(SW_sig) ,	// input [13:0] SW_sig
	.SW(SW_sig) ,	// input [14]:W[14]] SW_sig
	.SW(SW_sig) ,	// input [15]:W[15]] SW_sig
	.SW(SW_sig) ,	// input [16]:W[16]] SW_sig
	.KEY(KEY_sig) ,	// input [0]:EY[0]] KEY_sig
	.KEY(KEY_sig) ,	// input [1]:EY[1]] KEY_sig
	.KEY(KEY_sig) ,	// input [2]:EY[2]] KEY_sig
	.KEY(KEY_sig) ,	// input [3]:EY[3]] KEY_sig
	.HEX0(HEX0_sig) ,	// output [6:0] HEX0_sig
	.HEX1(HEX1_sig) ,	// output [6:0] HEX1_sig
	.HEX2(HEX2_sig) ,	// output [6:0] HEX2_sig
	.HEX3(HEX3_sig) ,	// output [6:0] HEX3_sig
	.LEDG(LEDG_sig) ,	// output [0]:EDG[0]] LEDG_sig
	.HEX4(HEX4_sig) ,	// output [6:0] HEX4_sig
	.HEX5(HEX5_sig) ,	// output [6:0] HEX5_sig
	.HEX6(HEX6_sig) ,	// output [6:0] HEX6_sig
	.HEX7(HEX7_sig) ,	// output [6:0] HEX7_sig
	.LEDR(LEDR_sig) ,	// output [3:0] LEDR_sig
	.LEDG(LEDG_sig) ,	// output [1]:EDG[1]] LEDG_sig
	.LEDR(LEDR_sig) 	// output [7:4] LEDR_sig
);

